{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-calls.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction CreateTaskComponent_h5_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\", 29);\n    i0.ɵɵtext(1, \"Task created successfully\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"invalid-form-control\": a0\n  };\n};\nexport let CreateTaskComponent = /*#__PURE__*/(() => {\n  class CreateTaskComponent {\n    constructor(api, fb) {\n      this.api = api;\n      this.fb = fb;\n      this.successtext = false;\n      const today = new Date();\n      this.minDate = today.toISOString().split('T')[0];\n    }\n    ngOnInit() {\n      this.taskForm = this.fb.group({\n        title: ['', Validators.required],\n        description: ['', Validators.required],\n        priority: ['low', Validators.required],\n        dueDate: ['', Validators.required]\n      });\n    }\n    save() {\n      if (this.taskForm.valid) {\n        this.api.createTask(this.taskForm.value).subscribe(res => {\n          this.successtext = true;\n          setTimeout(() => {\n            this.successtext = false;\n            this.taskForm.reset({\n              title: '',\n              description: '',\n              priority: 'low',\n              dueDate: ''\n            });\n          }, 3000);\n        });\n      } else {\n        console.log('Form is invalid');\n        this.taskForm.markAllAsTouched();\n      }\n    }\n    static #_ = this.ɵfac = function CreateTaskComponent_Factory(t) {\n      return new (t || CreateTaskComponent)(i0.ɵɵdirectiveInject(i1.ApiCallsService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateTaskComponent,\n      selectors: [[\"app-create-task\"]],\n      decls: 45,\n      vars: 12,\n      consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-primary\", \"bg-dark\"], [1, \"container-fluid\"], [1, \"navbar-brand\", \"text-light\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\", \"text-light\"], [1, \"navbar-toggler-icon\", \"text-light\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"me-auto\", \"mb-2\", \"mb-lg-0\"], [1, \"nav-item\"], [\"routerLink\", \"/view-task\", \"aria-current\", \"page\", 1, \"nav-link\", \"active\", \"text-light\", 2, \"cursor\", \"pointer\"], [1, \"container\", \"my-4\"], [1, \"card\", 2, \"margin-top\", \"100px\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [\"for\", \"inputName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"inputName\", \"formControlName\", \"title\", \"placeholder\", \"Enter your title\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"inputEmail\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"inputEmail\", \"formControlName\", \"description\", \"placeholder\", \"Enter your description\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"inputPhone\", 1, \"form-label\"], [\"id\", \"inputPhone\", \"formControlName\", \"priority\", 1, \"form-select\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"for\", \"inputDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"inputDate\", \"formControlName\", \"dueDate\", \"placeholder\", \"Enter your description\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"text-success text-center\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-dark\", \"mt-2\"], [1, \"text-success\", \"text-center\"]],\n      template: function CreateTaskComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n          i0.ɵɵtext(3, \"Create task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵelement(5, \"span\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"ul\", 6)(8, \"li\", 7)(9, \"a\", 8);\n          i0.ɵɵtext(10, \"View task\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(11, \"li\", 7);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10)(14, \"div\", 11);\n          i0.ɵɵtext(15, \" Create task form \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 12)(17, \"form\", 13);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateTaskComponent_Template_form_ngSubmit_17_listener() {\n            return ctx.save();\n          });\n          i0.ɵɵelementStart(18, \"div\", 14)(19, \"div\", 15)(20, \"label\", 16);\n          i0.ɵɵtext(21, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 15)(24, \"label\", 18);\n          i0.ɵɵtext(25, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"input\", 19);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 14)(28, \"div\", 15)(29, \"label\", 20);\n          i0.ɵɵtext(30, \"Priority Level\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"select\", 21)(32, \"option\", 22);\n          i0.ɵɵtext(33, \"Low\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"option\", 23);\n          i0.ɵɵtext(35, \"Medium\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"option\", 24);\n          i0.ɵɵtext(37, \"High\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(38, \"div\", 15)(39, \"label\", 25);\n          i0.ɵɵtext(40, \"Due Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(41, \"input\", 26);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(42, CreateTaskComponent_h5_42_Template, 2, 0, \"h5\", 27);\n          i0.ɵɵelementStart(43, \"button\", 28);\n          i0.ɵɵtext(44, \"Submit\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, !((tmp_1_0 = ctx.taskForm.get(\"title\")) == null ? null : tmp_1_0.valid) && ((tmp_1_0 = ctx.taskForm.get(\"title\")) == null ? null : tmp_1_0.touched)));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, !((tmp_2_0 = ctx.taskForm.get(\"description\")) == null ? null : tmp_2_0.valid) && ((tmp_2_0 = ctx.taskForm.get(\"description\")) == null ? null : tmp_2_0.touched)));\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, !((tmp_3_0 = ctx.taskForm.get(\"dueDate\")) == null ? null : tmp_3_0.valid) && ((tmp_3_0 = ctx.taskForm.get(\"dueDate\")) == null ? null : tmp_3_0.touched)));\n          i0.ɵɵattribute(\"min\", ctx.minDate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.successtext);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgIf, i4.RouterLink, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".invalid-form-control.ng-touched.ng-invalid[_ngcontent-%COMP%]{border-color:red}.card-header[_ngcontent-%COMP%]{background-color:#000;color:#fff}.navbar-toggler-icon[_ngcontent-%COMP%]{background-image:none;border:1px solid white;color:#fff}.navbar-toggler-icon[_ngcontent-%COMP%]:before{content:\\\"\\\\2630\\\";font-size:24px;color:#fff}\"]\n    });\n  }\n  return CreateTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}