{"ast":null,"code":"import * as XLSX from 'xlsx';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api-calls.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../loader/loader.component\";\nfunction ViewOtComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"input\", 30);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewOtComponent_div_13_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.dutyIdSearch = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ViewOtComponent_div_13_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.searchDutyById());\n    });\n    i0.ɵɵtext(3, \"Add Schedule\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.dutyIdSearch);\n  }\n}\nfunction ViewOtComponent_h5_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\", 32);\n    i0.ɵɵtext(1, \" SHOWING DATA FOR EMPLOYEE ID \");\n    i0.ɵɵelementStart(2, \"strong\", 33);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r1.Eid);\n  }\n}\nfunction ViewOtComponent_ng_container_39_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 34);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewOtComponent_ng_container_39_tr_1_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const dutie_r10 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(dutie_r10.value.date = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"th\", 35);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"input\", 36);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewOtComponent_ng_container_39_tr_1_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const dutie_r10 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(dutie_r10.value.OThours = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"input\", 36);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewOtComponent_ng_container_39_tr_1_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const dutie_r10 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(dutie_r10.value.NightHalt = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"td\")(18, \"input\", 36);\n    i0.ɵɵlistener(\"ngModelChange\", function ViewOtComponent_ng_container_39_tr_1_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const dutie_r10 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(dutie_r10.value.kms = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ViewOtComponent_ng_container_39_tr_1_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const i_r11 = i0.ɵɵnextContext().index;\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.deleteDutyie(i_r11));\n    });\n    i0.ɵɵtext(21, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext();\n    const i_r11 = ctx_r24.index;\n    const dutie_r10 = ctx_r24.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r11 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", dutie_r10.value.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dutie_r10.value.dutyId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dutie_r10.value.startTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dutie_r10.value.endTime);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(dutie_r10.value.dutyHours);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", dutie_r10.value.OThours);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", dutie_r10.value.NightHalt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", dutie_r10.value.kms);\n  }\n}\nfunction ViewOtComponent_ng_container_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ViewOtComponent_ng_container_39_tr_1_Template, 22, 9, \"tr\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const dutie_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", dutie_r10.value.dutyId);\n  }\n}\nfunction ViewOtComponent_button_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function ViewOtComponent_button_44_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.exportToExcel());\n    });\n    i0.ɵɵtext(1, \"Download Excel\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ViewOtComponent_button_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ViewOtComponent_button_45_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.TotalAmtOfEmployee());\n    });\n    i0.ɵɵtext(1, \" CALCULATE TOTAL \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ViewOtComponent_p_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 39);\n    i0.ɵɵtext(1, \" Please Emter employee Id \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ViewOtComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3, \"Total Duty Hours:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Total OT Hours:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"Total Night Allowance:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\")(14, \"strong\");\n    i0.ɵɵtext(15, \"Total KMS:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.totalValues.totalDutyHours, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.totalValues.totalOThours, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.totalValues.totalNightHalt, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.totalValues.totalKms, \"\");\n  }\n}\nexport let ViewOtComponent = /*#__PURE__*/(() => {\n  class ViewOtComponent {\n    constructor(api, route) {\n      this.api = api;\n      this.route = route;\n      this.employeeIdSearch = '';\n      this.dutyIdSearch = '';\n      this.isLoading = false;\n      this.successtxt = false;\n      this.totalValues = null;\n      this.filteredDuties = [];\n      this.AllDuty = false;\n      this.newDuty = {\n        dutyId: '',\n        startTime: '',\n        endTime: '',\n        dutyHours: '',\n        OThours: '',\n        NightHalt: '',\n        date: '',\n        kms: ''\n      };\n      // Sample duty data\n      this.dutyListData = [{\n        dutyId: '1',\n        startTime: '18:30',\n        endTime: '',\n        dutyHours: '',\n        OThours: '',\n        NightHalt: '',\n        kms: ''\n      }, {\n        dutyId: 'NS/1',\n        startTime: '18:30',\n        endTime: '07:45',\n        dutyHours: '06:15',\n        OThours: '',\n        NightHalt: '125',\n        kms: '538'\n      }, {\n        dutyId: '2',\n        startTime: '',\n        endTime: '07:45',\n        dutyHours: '06:15',\n        OThours: '',\n        NightHalt: '125',\n        kms: '538'\n      }];\n    }\n    ngOnInit() {\n      // Optional: Initial setup or data fetch can be done here\n      console.log(this.filteredDuties);\n    }\n    sendFirstFilteredDuty() {\n      if (this.filteredDuties.length > 0 && Object.keys(this.filteredDuties[0]).length > 0) {\n        const firstDuty = this.filteredDuties[0];\n        console.log(\"Sending first duty:\", firstDuty);\n        // Uncomment and implement your sending logic\n        // this.api.sendDuty(firstDuty).subscribe(response => {\n        //   console.log(\"Duty sent successfully\", response);\n        // });\n      } else {\n        alert('No duties available to send.');\n      }\n    }\n    searchDutyById() {\n      if (this.dutyIdSearch.trim()) {\n        const duty = this.dutyListData.find(d => d.dutyId === this.dutyIdSearch);\n        // Reset input after search\n        this.dutyIdSearch = '';\n        if (duty) {\n          const existingDutyIndex = Object.keys(this.filteredDuties[0]).findIndex(key => {\n            const existingDuty = this.filteredDuties[0][key];\n            return existingDuty.dutyId === duty.dutyId;\n          });\n          if (existingDutyIndex !== -1) {\n            console.log(\"Duty already exists:\", this.filteredDuties[0][existingDutyIndex]);\n          }\n          const newIndex = Object.keys(this.filteredDuties[0]).length;\n          this.filteredDuties[0][newIndex] = duty;\n          console.log(\"Duty added:\", duty);\n          this.sendFirstFilteredDuty();\n          this.updateEmployeeData();\n          // this.searchEmployeeById();\n          this.totalValues = false;\n        } else {\n          alert('Duty ID not found in the list.');\n        }\n      } else {\n        alert('Please enter a Duty ID to search.');\n      }\n      console.log(\"Filtered duties:\", this.filteredDuties);\n    }\n    searchEmployeeById() {\n      this.isLoading = true;\n      if (this.employeeIdSearch) {\n        this.api.getTaskById(this.employeeIdSearch).subscribe(tasks => {\n          if (tasks) {\n            this.AllDuty = true;\n            this.isLoading = false;\n            this.Eid = this.employeeIdSearch;\n            if (Array.isArray(tasks)) {\n              this.filteredDuties = tasks;\n              this.totalValues = false;\n            } else {\n              this.filteredDuties = [tasks];\n              this.calculateTotal();\n              this.totalValues = false;\n              this.isLoading = false;\n              // this.Eid ='';\n            }\n\n            console.log(this.filteredDuties[0]);\n          } else {\n            alert('No tasks found for the given Employee ID.');\n            this.employeeIdSearch = '';\n            this.filteredDuties = [];\n            this.isLoading = false;\n            this.Eid = '';\n          }\n        }, error => {\n          alert(`No employee present with this employee ID: ${this.employeeIdSearch}`);\n          console.error('Error fetching tasks:', error);\n          this.filteredDuties = [];\n          this.employeeIdSearch = '';\n          this.isLoading = false;\n          this.Eid = '';\n        });\n      } else {\n        alert('Please enter an Employee ID to search.');\n        // this.filteredDuties = [];\n        this.isLoading = false;\n      }\n    }\n    updateEmployeeData() {\n      this.isLoading = true;\n      if (this.filteredDuties.length > 0 && this.employeeIdSearch) {\n        const payload = {\n          ...this.filteredDuties[0],\n          id: this.employeeIdSearch\n        };\n        this.api.updateTask(payload).subscribe(res => {\n          this.successtxt = true;\n          this.calculateTotal();\n          this.isLoading = false;\n          this.searchEmployeeById();\n          setTimeout(() => {\n            this.successtxt = false;\n            // this.route.navigateByUrl('/')\n          }, 3000);\n          console.log('Employee data updated successfully', res);\n        }, error => {\n          alert('Error updating employee data. Please try again or plz enter proper Employee Id.');\n          console.error('Error updating data:', error);\n          this.isLoading = false;\n        });\n      } else {\n        alert('No data to update or Employee ID is missing.');\n        this.isLoading = false;\n      }\n    }\n    loadDuties() {\n      const updatedDuties = [];\n      Object.keys(this.filteredDuties[0]).forEach(key => {\n        const duty = this.filteredDuties[0][key];\n        // Check if duty is valid and has all necessary properties\n        if (duty && typeof duty === 'object' && 'dutyId' in duty) {\n          updatedDuties.push({\n            dutyId: duty.dutyId,\n            startTime: duty.startTime || '',\n            endTime: duty.endTime || '',\n            dutyHours: duty.dutyHours || '',\n            OThours: duty.OThours || '',\n            NightHalt: duty.NightHalt || '',\n            kms: duty.kms || '',\n            date: duty.date || ''\n          });\n        }\n      });\n      // Update the state to reflect the array format\n      this.filteredDuties = [...updatedDuties]; // Ensure it's an array\n      console.log(\"Duties loaded:\", this.filteredDuties);\n    }\n    deleteDutyie(index) {\n      console.log('Attempting to delete duty at index:', index);\n      // Access the filteredDuties object\n      const dutiesObject = this.filteredDuties[0]; // Assuming you're using the first object\n      const dutiesKeys = Object.keys(dutiesObject); // Get the keys\n      // Log the keys and their count\n      console.log('Filtered duties keys:', dutiesKeys);\n      console.log('Filtered duties object length:', dutiesKeys.length);\n      if (index >= 0 && index < dutiesKeys.length) {\n        const dutyKey = dutiesKeys[index]; // Get the actual key\n        delete dutiesObject[dutyKey]; // Delete the duty using the key\n        // Clean up the object to remove undefined properties\n        this.filteredDuties[0] = {\n          ...dutiesObject\n        }; // Update the filteredDuties object\n        console.log('Duty deleted successfully', this.filteredDuties);\n        this.calculateTotal(); // Update totals after deletion\n      } else {\n        console.error('Invalid index for deletion:', index);\n        alert('Invalid index for deletion.');\n      }\n    }\n    deleteDuty(dutyId) {\n      const dutiesArray = Object.values(this.filteredDuties[0]);\n      const filteredArray = dutiesArray.filter(duty => duty.dutyId !== dutyId);\n      const updatedDuties = {};\n      filteredArray.forEach((duty, index) => {\n        updatedDuties[index] = duty;\n      });\n      this.filteredDuties[0] = {\n        ...updatedDuties,\n        ['id']: this.filteredDuties[0]['id']\n      };\n      console.log('Duty deleted successfully', this.filteredDuties);\n      this.calculateTotal();\n      this.totalValues = false;\n    }\n    calculateTotal() {\n      let totalOThours = 0;\n      let totalNightHalt = 0;\n      let totalKms = 0;\n      let totalHours = 0;\n      let totalMinutes = 0;\n      // Iterate through the filtered duties and sum the values\n      for (const dutyKey of Object.keys(this.filteredDuties[0])) {\n        const duty = this.filteredDuties[0][dutyKey];\n        // Handle duty hours (convert HH:mm format to minutes and sum)\n        if (duty.dutyHours) {\n          const [hours, minutes] = duty.dutyHours.split(':').map(Number); // Split the duty hours into hours and minutes\n          totalHours += hours;\n          totalMinutes += minutes;\n        }\n        // Sum OT hours (ensure it is treated as a number)\n        totalOThours += Number(duty.OThours) || 0;\n        // Sum night halt\n        totalNightHalt += Number(duty.NightHalt) || 0;\n        // Sum KMS (convert to number)\n        totalKms += Number(duty.kms) || 0;\n      }\n      // Convert totalMinutes to hours if it exceeds 60\n      totalHours += Math.floor(totalMinutes / 60);\n      totalMinutes = totalMinutes % 60; // remaining minutes after converting to hours\n      // Format total duty hours in HH:mm\n      const formattedDutyHours = `${String(totalHours).padStart(2, '0')}:${String(totalMinutes).padStart(2, '0')}`;\n      // Store the totals\n      // this.totalValues = {\n      //   totalDutyHours: formattedDutyHours,\n      //   totalOThours,\n      //   totalNightHalt, \n      //   totalKms,\n      // };\n    }\n\n    exportToExcel() {\n      if (!this.filteredDuties || this.filteredDuties.length === 0 || !this.filteredDuties[0]) {\n        alert(\"No duties available to export.\");\n        return;\n      }\n      const dutiesArray = Object.values(this.filteredDuties[0]);\n      // Helper function to format date to dd/mm/yyyy\n      const formatDate = dateString => {\n        const date = new Date(dateString);\n        const day = String(date.getDate()).padStart(2, '0');\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-indexed\n        const year = date.getFullYear();\n        return `${day}/${month}/${year}`;\n      };\n      // Prepare the table data without headings\n      const tableData = dutiesArray.map((duty, index) => [index + 1, formatDate(duty.date), duty.dutyId, duty.startTime, duty.endTime, duty.dutyHours, duty.OThours, duty.NightHalt, duty.kms // KMS\n      ]);\n      // Remove the last entry from the tableData array\n      tableData.pop();\n      // If tableData is empty after removing the last entry, return early\n      if (tableData.length === 0) {\n        alert(\"No duties found for exporting.\");\n        return;\n      }\n      // Create the worksheet from the array of arrays without headers\n      const worksheet = XLSX.utils.aoa_to_sheet(tableData);\n      const workbook = {\n        Sheets: {\n          'Duty Data': worksheet\n        },\n        SheetNames: ['Duty Data']\n      };\n      // Export file using employeeIdSearch for file name\n      XLSX.writeFile(workbook, `${this.Eid}.xlsx`);\n      this.updateEmployeeData();\n    }\n    TotalAmtOfEmployee() {\n      let totalOThours = 0;\n      let totalNightHalt = 0;\n      let totalKms = 0;\n      let totalHours = 0;\n      let totalMinutes = 0;\n      // Iterate through the filtered duties and sum the values\n      for (const dutyKey of Object.keys(this.filteredDuties[0])) {\n        const duty = this.filteredDuties[0][dutyKey];\n        // Handle duty hours (convert HH:mm format to minutes and sum)\n        if (duty.dutyHours) {\n          const [hours, minutes] = duty.dutyHours.split(':').map(Number); // Split the duty hours into hours and minutes\n          totalHours += hours;\n          totalMinutes += minutes;\n        }\n        // Sum OT hours (ensure it is treated as a number)\n        totalOThours += Number(duty.OThours) || 0;\n        // Sum night halt\n        totalNightHalt += Number(duty.NightHalt) || 0;\n        // Sum KMS (convert to number)\n        totalKms += Number(duty.kms) || 0;\n      }\n      // Convert totalMinutes to hours if it exceeds 60\n      totalHours += Math.floor(totalMinutes / 60);\n      totalMinutes = totalMinutes % 60; // remaining minutes after converting to hours\n      // Format total duty hours in HH:mm\n      const formattedDutyHours = `${String(totalHours).padStart(2, '0')}:${String(totalMinutes).padStart(2, '0')}`;\n      this.totalValues = {\n        totalDutyHours: formattedDutyHours,\n        totalOThours,\n        totalNightHalt,\n        totalKms\n      };\n    }\n    static #_ = this.ɵfac = function ViewOtComponent_Factory(t) {\n      return new (t || ViewOtComponent)(i0.ɵɵdirectiveInject(i1.ApiCallsService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ViewOtComponent,\n      selectors: [[\"app-view-ot\"]],\n      decls: 59,\n      vars: 11,\n      consts: [[1, \"navbar\", \"navbar-light\", \"bg-success\", 2, \"background-color\", \"#ff7100!important\", \"color\", \"aliceblue!imortant\", \"font-weight\", \"700!important\"], [\"routerLink\", \"/\", \"src\", \"https://pbs.twimg.com/profile_images/1411910368192995334/pg6wZAlk_400x400.jpg\", \"alt\", \"Logo\", 2, \"height\", \"80px\", \"margin-left\", \"10px\", \"width\", \"85px\", \"cursor\", \"pointer\", \"border-radius\", \"85px\"], [1, \"navbar-brand\", \"text-center\", 2, \"color\", \"white\", \"margin-left\", \"5px\"], [\"routerLink\", \"/\", 1, \"btn\", \"btn-dark\", 2, \"margin-right\", \"10px\"], [1, \"container-fluid\"], [1, \"row\", \"justify-content-center\", \"mt-4\"], [1, \"col-md-12\", \"d-flex\", \"justify-content-center\"], [\"type\", \"text\", \"placeholder\", \"Enter Employee ID\", 1, \"form-control\", \"me-2\", 2, \"max-width\", \"300px\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"col-md-12 d-flex justify-content-center mt-4\", 4, \"ngIf\"], [\"style\", \"margin-top: 10px; color: blueviolet;\", 4, \"ngIf\"], [1, \"table\", \"table-bordered\", \"mt-4\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [1, \"d-flex\", \"justify-content-center\", 2, \"margin-bottom\", \"1rem\"], [1, \"btn\", \"btn-success\", 2, \"background\", \"#ff7100 !important\", \"border\", \"none !important\", 3, \"click\"], [\"style\", \"margin-left: 8px;\", \"class\", \"btn btn-success ml-2\", 3, \"click\", 4, \"ngIf\"], [\"style\", \"margin-left: 8px\", \"type\", \"button\", \"class\", \"btn btn-primary\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModalCenter\", 3, \"click\", 4, \"ngIf\"], [\"style\", \"text-align: center;\", \"class\", \"text-danger mt-4\", 4, \"ngIf\"], [\"id\", \"exampleModalCenter\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalCenterTitle\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\", 2, \"background\", \"#ff7100 !important\", \"color\", \"#fff\", \"font-weight\", \"800\", \"opacity\", \"0.8\"], [\"id\", \"exampleModalLongTitle\", 1, \"modal-title\"], [1, \"modal-body\"], [4, \"ngIf\"], [1, \"modal-footer\", 2, \"background\", \"#ff7100 !important\", \"color\", \"#fff\", \"font-weight\", \"800\", \"opacity\", \"0.8\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-success\", 2, \"border\", \"1px solid #fff\"], [3, \"isLoading\"], [1, \"col-md-12\", \"d-flex\", \"justify-content-center\", \"mt-4\"], [\"type\", \"text\", \"placeholder\", \"Enter Schedule No.\", 1, \"form-control\", \"me-2\", 2, \"max-width\", \"300px\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [2, \"margin-top\", \"10px\", \"color\", \"blueviolet\"], [2, \"color\", \"black\"], [\"type\", \"date\", 1, \"form-control\", 2, \"max-width\", \"150px\", 3, \"ngModel\", \"ngModelChange\"], [\"scope\", \"row\"], [\"type\", \"number\", 1, \"form-control\", 2, \"max-width\", \"100px\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-success\", \"ml-2\", 2, \"margin-left\", \"8px\", 3, \"click\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#exampleModalCenter\", 1, \"btn\", \"btn-primary\", 2, \"margin-left\", \"8px\", 3, \"click\"], [1, \"text-danger\", \"mt-4\", 2, \"text-align\", \"center\"]],\n      template: function ViewOtComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0);\n          i0.ɵɵelement(1, \"img\", 1);\n          i0.ɵɵelementStart(2, \"a\", 2);\n          i0.ɵɵtext(3, \"NWKRTC EMPLOYEE OT MANAGEMENT SYSTEM\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵtext(5, \"CREATE EMPLOYEE ID\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6)(10, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function ViewOtComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.employeeIdSearch = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function ViewOtComponent_Template_button_click_11_listener() {\n            return ctx.searchEmployeeById();\n          });\n          i0.ɵɵtext(12, \"Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(13, ViewOtComponent_div_13_Template, 4, 1, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, ViewOtComponent_h5_14_Template, 4, 1, \"h5\", 10);\n          i0.ɵɵelementStart(15, \"table\", 11)(16, \"thead\")(17, \"tr\")(18, \"th\", 12);\n          i0.ɵɵtext(19, \"SL No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\");\n          i0.ɵɵtext(21, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"th\", 12);\n          i0.ɵɵtext(23, \"Schedule No\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"th\", 12);\n          i0.ɵɵtext(25, \"Start Time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"th\", 12);\n          i0.ɵɵtext(27, \"End Time\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"th\", 12);\n          i0.ɵɵtext(29, \"Duty Hours\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"th\", 12);\n          i0.ɵɵtext(31, \"OT Hours\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"th\", 12);\n          i0.ɵɵtext(33, \"Night Allowance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"th\", 12);\n          i0.ɵɵtext(35, \"KMS\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"th\", 12);\n          i0.ɵɵtext(37, \"Delete\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(38, \"tbody\");\n          i0.ɵɵtemplate(39, ViewOtComponent_ng_container_39_Template, 2, 1, \"ng-container\", 13);\n          i0.ɵɵpipe(40, \"keyvalue\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(41, \"div\", 14)(42, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function ViewOtComponent_Template_button_click_42_listener() {\n            return ctx.updateEmployeeData();\n          });\n          i0.ɵɵtext(43, \"UPDATE\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(44, ViewOtComponent_button_44_Template, 2, 0, \"button\", 16);\n          i0.ɵɵtemplate(45, ViewOtComponent_button_45_Template, 2, 0, \"button\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(46, ViewOtComponent_p_46_Template, 2, 0, \"p\", 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"div\", 19)(48, \"div\", 20)(49, \"div\", 21)(50, \"div\", 22)(51, \"h5\", 23);\n          i0.ɵɵtext(52, \"Total\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(53, \"div\", 24);\n          i0.ɵɵtemplate(54, ViewOtComponent_div_54_Template, 17, 4, \"div\", 25);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(55, \"div\", 26)(56, \"button\", 27);\n          i0.ɵɵtext(57, \"Close\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelement(58, \"app-loader\", 28);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngModel\", ctx.employeeIdSearch);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.AllDuty);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.AllDuty);\n          i0.ɵɵadvance(25);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(40, 9, ctx.filteredDuties[0]));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.filteredDuties.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.filteredDuties.length > 0);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.filteredDuties.length === 0);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.totalValues);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"isLoading\", ctx.isLoading);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgModel, i5.LoaderComponent, i3.KeyValuePipe]\n    });\n  }\n  return ViewOtComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}